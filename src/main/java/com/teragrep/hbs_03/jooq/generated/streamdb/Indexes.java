/*
 * This file is generated by jOOQ.
 */
package com.teragrep.hbs_03.jooq.generated.streamdb;


import com.teragrep.hbs_03.jooq.generated.streamdb.tables.Host;
import com.teragrep.hbs_03.jooq.generated.streamdb.tables.LogGroup;
import com.teragrep.hbs_03.jooq.generated.streamdb.tables.Stream;

import javax.annotation.Generated;

import org.jooq.Index;
import org.jooq.OrderField;
import org.jooq.impl.Internal;


/**
 * A class modelling indexes of tables of the <code>streamdb</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Indexes {

    // -------------------------------------------------------------------------
    // INDEX definitions
    // -------------------------------------------------------------------------

    public static final Index HOST_GID = Indexes0.HOST_GID;
    public static final Index HOST_IDX_NAME_ID = Indexes0.HOST_IDX_NAME_ID;
    public static final Index HOST_PRIMARY = Indexes0.HOST_PRIMARY;
    public static final Index LOG_GROUP_PRIMARY = Indexes0.LOG_GROUP_PRIMARY;
    public static final Index STREAM_GID = Indexes0.STREAM_GID;
    public static final Index STREAM_PRIMARY = Indexes0.STREAM_PRIMARY;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Indexes0 {
        public static Index HOST_GID = Internal.createIndex("gid", Host.HOST, new OrderField[] { Host.HOST.GID }, false);
        public static Index HOST_IDX_NAME_ID = Internal.createIndex("idx_name_id", Host.HOST, new OrderField[] { Host.HOST.NAME, Host.HOST.ID }, false);
        public static Index HOST_PRIMARY = Internal.createIndex("PRIMARY", Host.HOST, new OrderField[] { Host.HOST.ID }, true);
        public static Index LOG_GROUP_PRIMARY = Internal.createIndex("PRIMARY", LogGroup.LOG_GROUP, new OrderField[] { LogGroup.LOG_GROUP.ID }, true);
        public static Index STREAM_GID = Internal.createIndex("gid", Stream.STREAM, new OrderField[] { Stream.STREAM.GID }, false);
        public static Index STREAM_PRIMARY = Internal.createIndex("PRIMARY", Stream.STREAM, new OrderField[] { Stream.STREAM.ID }, true);
    }
}
